{
  "_args": [
    [
      {
        "raw": "png.js@^0.2.1",
        "scope": null,
        "escapedName": "png.js",
        "name": "png.js",
        "rawSpec": "^0.2.1",
        "spec": ">=0.2.1 <0.3.0",
        "type": "range"
      },
      "/mnt/c/Users/coren/Desktop/Addventa/CorentinAddventa.github.io/node_modules/tesseract.js"
    ]
  ],
  "_from": "png.js@>=0.2.1 <0.3.0",
  "_id": "png.js@0.2.1",
  "_inCache": true,
  "_location": "/png.js",
  "_npmUser": {
    "name": "arian",
    "email": "stolwijk.arian@gmail.com"
  },
  "_npmVersion": "1.4.28",
  "_phantomChildren": {},
  "_requested": {
    "raw": "png.js@^0.2.1",
    "scope": null,
    "escapedName": "png.js",
    "name": "png.js",
    "rawSpec": "^0.2.1",
    "spec": ">=0.2.1 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/tesseract.js"
  ],
  "_resolved": "https://registry.npmjs.org/png.js/-/png.js-0.2.1.tgz",
  "_shasum": "da6b83c134bdc101940d9ab1c98e9154affbb1f2",
  "_shrinkwrap": null,
  "_spec": "png.js@^0.2.1",
  "_where": "/mnt/c/Users/coren/Desktop/Addventa/CorentinAddventa.github.io/node_modules/tesseract.js",
  "author": {
    "name": "Arian Stolwijk"
  },
  "bugs": {
    "url": "https://github.com/arian/pngjs/issues"
  },
  "dependencies": {},
  "description": "A PNG decoder fully written in JavaScript",
  "devDependencies": {
    "browserify": "^12.0.1",
    "canvas": "^1.3.5"
  },
  "directories": {},
  "dist": {
    "shasum": "da6b83c134bdc101940d9ab1c98e9154affbb1f2",
    "tarball": "https://registry.npmjs.org/png.js/-/png.js-0.2.1.tgz"
  },
  "files": [
    "PNG.js",
    "PNGReader.js"
  ],
  "gitHead": "662e66d36a0849b202198f58e3aad7b5e5b10b62",
  "homepage": "https://github.com/arian/pngjs#readme",
  "main": "PNGReader.js",
  "maintainers": [
    {
      "name": "arian",
      "email": "stolwijk.arian@gmail.com"
    }
  ],
  "name": "png.js",
  "optionalDependencies": {},
  "readme": "\nPNG.js\n======\n\nPNG.js is a PNG decoder fully written in JavaScript. It works in Node.js as\nwell as in (modern) browsers.\n\nUsage\n-----\n\n``` js\nvar PNGReader = require('png.js');\n\nvar reader = new PNGReader(bytes);\nreader.parse(function(err, png){\n\tif (err) throw err;\n\tconsole.log(png);\n});\n\n```\n\nOr with options:\n\n``` js\nreader.parse({\n\tdata: false\n}, function(err, png){\n\tif (err) throw err;\n\tconsole.log(png);\n});\n\n```\n\nCurrently the only option is:\n\n- `data` (*boolean*) - should it read the pixel data, or only the image information.\n\n### PNG object\n\nThe PNG object is passed in the callback. It contains all the data extracted\nfrom the image.\n\n``` js\n// most importantly\npng.getWidth();\npng.getHeight();\npng.getPixel(x, y); // [red, blue, green, alpha]\n// but also\npng.getBitDepth();\npng.getColorType();\npng.getCompressionMethod();\npng.getFilterMethod();\npng.getInterlaceMethod();\npng.getPalette();\n```\n\nUsing PNGReader in Node.js\n--------------------------\n\nPNGReader accepts an `Buffer` object, returned by `fs.readFile`, for example:\n\n``` js\nfs.readFile('test.png', function(err, buffer){\n\n\tvar reader = new PNGReader(buffer);\n\treader.parse(function(err, png){\n\t\tif (err) throw err;\n\t\tconsole.log(png);\n\t});\n\n});\n```\n\nUsing PNGReader in the Browser\n------------------------------\n\nPNGReader accepts a byte string, array of bytes or an ArrayBuffer.\n\nFor example using FileReader with file input fields:\n\n```js\nvar reader = new FileReader();\n\nreader.onload = function(event){\n\tvar reader = new PNGReader(event.target.result);\n\treader.parse(function(err, png){\n\t\tif (err) throw err;\n\t\tconsole.log(png);\n\t});\n};\n\nfileInputElement.onchange = function(){\n\treader.readAsArrayBuffer(fileInputElement.files[0]);\n\t// or, but less optimal\n\treader.readAsBinaryString(fileInputElement.files[0]);\n};\n```\n\nOr instead of using input elements, XHR can also be used:\n\n```js\nvar xhr = new XMLHttpRequest();\nxhr.open('GET', 'image.png', true);\nxhr.responseType = 'arraybuffer';\n\nxhr.onload = function(e){\n\tif (this.status == 200){\n\t\tvar reader = new PNGReader(this.response);\n\t\treader.parse(function(err, png){\n\t\t\tif (err) throw err;\n\t\t\tconsole.log(png);\n\t\t});\n\t}\n};\n\nxhr.send();\n```\n\nBuilding Browser Version\n------------------------\n\nPNG.js uses CommonJS modules which can be used in browsers after building it\nwith [browserify](http://browserify.org/):\n\n\tbrowserify ./PNGReader.js -s PNGReader\n",
  "readmeFilename": "README.md",
  "repository": {
    "url": "git://github.com/arian/pngjs.git"
  },
  "scripts": {
    "build": "browserify ./PNGReader.js -s PNGReader -o html/png.js"
  },
  "version": "0.2.1"
}
